<?xml version="1.0" encoding="utf-8"?>

<!--

	ADOBE SYSTEMS INCORPORATED
	Copyright 2009 Adobe Systems Incorporated
	All Rights Reserved.
	
	NOTICE: Adobe permits you to use, modify, and distribute this file
	in accordance with the terms of the license agreement accompanying it.

-->

<!--

	The default skin class for the Spark VideoPlayer component.  
	
	@langversion 3.0
	@playerversion Flash 10
	@playerversion AIR 1.5
	@productversion Flex 4

-->
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s ="library://ns.adobe.com/flex/spark"
		xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
		alpha.disabledStates="0.5">
	
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("spark.components.VideoPlayer")]
	</fx:Metadata>
	
	
	<!-- states -->
	<s:states>
		<s:State name="uninitialized" stateGroups="uninitializedStates, normalStates" />
		<s:State name="loading" stateGroups="loadingStates, normalStates" />
		<s:State name="ready" stateGroups="readyStates, normalStates" />
		<s:State name="playing" stateGroups="playingStates, normalStates" />
		<s:State name="paused" stateGroups="pausedStates, normalStates" />
		<s:State name="buffering" stateGroups="bufferingStates, normalStates" />
		<s:State name="playbackError" stateGroups="playbackErrorStates, normalStates" />
		<s:State name="disabled" stateGroups="disabledStates, normalStates"/>
		<s:State name="uninitializedAndFullScreen" stateGroups="uninitializedStates, fullScreenStates" />
		<s:State name="loadingAndFullScreen" stateGroups="loadingStates, fullScreenStates" />
		<s:State name="readyAndFullScreen" stateGroups="readyStates, fullScreenStates" />
		<s:State name="playingAndFullScreen" stateGroups="playingStates, fullScreenStates" />
		<s:State name="pausedAndFullScreen" stateGroups="pausedStates, fullScreenStates" />
		<s:State name="bufferingAndFullScreen" stateGroups="bufferingStates, fullScreenStates" />
		<s:State name="playbackErrorAndFullScreen" stateGroups="playbackErrorStates, fullScreenStates" />
		<s:State name="disabledAndFullScreen" stateGroups="disabledStates, fullScreenStates"/>
	</s:states>
	
	<!-- drop shadow -->
	<s:RectangularDropShadow id="shadow" blurX="17" blurY="17" alpha="0.32" distance="4" 
							 angle="90" color="#131313" left="0" top="0" right="0" bottom="0"
							 excludeFrom="fullScreenStates"/>
	
	<!-- video and player controls are clipped if they exceed the size of the 
	component, but the drop shadow above is not clipped and sizes to the component -->
	<s:Group clipAndEnableScrolling="true" left="0" top="0" right="0" bottom="0">
		
		<!-- There's a minimum size for the video and controls.  If we go below that
		we are clipped. -->
		<s:Group minWidth="263" minHeight="184" left="0" right="0" top="0" bottom="0">
			
			<!-- background when the videoElement doesn't fill its whole spot 
			<s:Rect bottom="0" left="0" right="0" top="0">
				<s:fill>
					<s:SolidColor color="0x000000" />
				</s:fill>
			</s:Rect>
			-->
			
			<!-- The subcomponent that loads the video but does not define the appearance of the VideoPlayer component. -->
			<s:VideoDisplay id="videoDisplay" bottom="0" left="0" right="0" top="0"/>
		</s:Group>
	</s:Group>
	
</s:Skin>
