<?xml version="1.0" encoding="utf-8"?>
<!--

	Licensed to the Apache Software Foundation (ASF) under one or more
	contributor license agreements.  See the NOTICE file distributed with
	this work for additional information regarding copyright ownership.
	The ASF licenses this file to You under the Apache License, Version 2.0
	(the "License"); you may not use this file except in compliance with
	the License.  You may obtain a copy of the License at
	
	http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.

-->


<!---
	The default skin class for the scrub bar of a Spark VideoPlayer component
	in the normal skin state. The normal skin state means the component is not in 
	one of the <code>fullScreen</code> skin states.  
	
	@see spark.components.VideoPlayer
	
	@langversion 3.0
	@playerversion Flash 10
	@playerversion AIR 1.5
	@productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
			 xmlns:s ="library://ns.adobe.com/flex/spark"
			 xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
			 height="42" minWidth="60"
			 alpha.disabled="0.5">
	
	<fx:Metadata>
		/** 
		 * @copy spark.skins.spark.ApplicationSkin#hostComponent
		 */
		[HostComponent("spark.components.mediaClasses.ScrubBar")]
	</fx:Metadata> 
	
	<fx:Script fb:purpose="styling">
		/* Define the skin elements that should not be colorized. */
		static private const exclusions:Array = ["track", "thumb"];
		
		/**
		 * @private
		 */
		override public function get colorizeExclusions():Array {return exclusions;}
		
		[Embed(source="assets/images/videoPlayerScrub.png",scaleGridLeft="5", scaleGridRight="462", scaleGridTop="1", scaleGridBottom="7")]
		private var VideoPlayerScrub:Class;
		
		/**
		 * @private
		 */
		override protected function initializationComplete():void
		{
			super.initializationComplete();
			
			videoPlayerSrubSource = new VideoPlayerScrub;
		}
		/**
		 * @private
		 */
		[Bindable]
		private var videoPlayerSrubSource:*;
		
	</fx:Script>
	
	<s:states>
		<s:State name="normal" />
		<s:State name="disabled" />
	</s:states>
	
	<fx:Declarations>
		<!--- Defines the appearance of the ScrubBar skin's data tip. To customize the data tip's appearance,
		      create a custom ScrubBarSkin class. -->
		<fx:Component id="dataTip">     
			<s:DataRenderer minHeight="24" minWidth="40" y="-34">
				<s:RectangularDropShadow id="shadow" distance="3" 
										 angle="90" color="#999999"
										 left="0" top="0" right="0" bottom="0"/>
				
				<s:Rect top="0" left="0" right="0" bottom="0">
					<s:fill>
						<s:SolidColor color="0x000000" alpha=".9"/>
					</s:fill>
				</s:Rect>
				
				<s:Label id="labelDisplay" text="{data}"
						 horizontalCenter="0" verticalCenter="1"
						 left="5" right="5" top="5" bottom="5"
						 textAlign="center" verticalAlign="middle"
						 fontWeight="normal" color="white" fontSize="11">
				</s:Label>
			</s:DataRenderer>
		</fx:Component>
	</fx:Declarations>
	
	<!--- The skin pat that defines the video timeline. The timeline shows the current playhead location  
	      in the video, the amount of the video previously played, and the loaded in part of the video. -->
	<s:Button id="track" left="10" right="10" verticalCenter="0"
			  skinClass="multipublish.skins.VideoPlayerTrackSkin"/>
	
	<!--- @copy spark.components.mediaClasses.ScrubBar#playedArea -->
	<s:Group id="playedArea" height="8" x="10" y="17"
			 includeInLayout="false"
			 clipAndEnableScrolling="false">
		
		<s:BitmapImage source="{videoPlayerSrubSource}"
					   smooth="true" width="100%" height="100%"
					   fillMode="scale" scaleMode="stretch">
			
			<s:filters>
				<s:GlowFilter color="0xFFFFFF" blurX="2" blurY="2"/>
			</s:filters>
			
		</s:BitmapImage>
		
	</s:Group>
	
	<!--- A skin part that defines a button that can be dragged along the track to increase or decrease 
	      he playhead location in the video.   -->
	<s:Button id="thumb" verticalCenter="0"
			  skinClass="multipublish.skins.VideoPlayerThumbSkin" />
	
</s:SparkSkin>
