<?xml version="1.0" encoding="utf-8"?>
<ct:ContentView xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s ="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx"
				xmlns:ct="multipublish.views.contents.*"
				xmlns:wt="com.winonetech.controls.*"
				mouseChildren="false" mouseEnabled="false">
	
	<ct:states>
		<s:State name="http"/>
		<s:State name="rtmp"/>
	</ct:states>
	
	<wt:HttpStreamPlayer id="player" width="100%" height="100%"
					 includeIn="http" source="{stream.content}"/>
	
	<wt:RtmpStreamPlayer id="rtmpPlayer" width="100%" height="100%"
						 includeIn="rtmp" source="{stream.content}"/>
	
	<fx:Script>
		<![CDATA[
			import cn.vision.utils.StringUtil;
			
			import multipublish.consts.MPTipConsts;
			import multipublish.vo.contents.Stream;
			
			import mx.events.FlexEvent;
			
			
			/**
			 * @inheritDoc
			 */
			
			override protected function processPlay():void
			{
				super.processPlay();
				
				if (player) 	player.resume();
				if (rtmpPlayer)	rtmpPlayer.resume();
			}
			
			
			/**
			 * @inheritDoc
			 */
			
			override protected function processStop():void
			{
				super.processStop();
				
				if (player)		player.pause();
				if (rtmpPlayer) rtmpPlayer.pause();
			}
			
			
			/**
			 * @inheritDoc
			 */
			
			override protected function processReset():void
			{
				super.processReset();
				
				if (player) player.source = null;
				
				if (rtmpPlayer)
				{
					rtmpPlayer.close();
					rtmpPlayer.source = null;
				}
			}
			
			
			/**
			 * @inheritDoc
			 */
			
			override protected function resolveData():void
			{
				log(MPTipConsts.RECORD_CONTENT_DATA, data);
				
				trace("-----------------");
				trace("...ResolveData...");
				trace("-----------------");
				
				stream = data as Stream;
				
				currentState = !StringUtil.empty(stream.content) 
				 			&& stream.content.indexOf("http://") != -1
							&& stream.content.split(".").pop() == "m3u8"
								? "http"
								: "rtmp";
				
				dispatchReady();
			}
			
			
			/**
			 * @private
			 */
			[Bindable]
			private var stream:Stream;
			
		]]>
	</fx:Script>
	
</ct:ContentView>
