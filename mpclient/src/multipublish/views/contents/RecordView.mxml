<?xml version="1.0" encoding="utf-8"?>
<ct:ContentView xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s ="library://ns.adobe.com/flex/spark"
				xmlns:mx="library://ns.adobe.com/flex/mx"
				xmlns:ct="multipublish.views.contents.*">
	<s:VideoPlayer id="video" width="100%" height="100%"
				   autoPlay="false" loop="false"
				   skinClass="multipublish.skins.UnnavigationVideoPlayerSkin"
				   source="{content.content}" scaleMode="letterbox"
				   mediaPlayerStateChange="handlerMediaStateChange(event)"
				   complete="stop()"/>
	
	<fx:Script>
		<![CDATA[
			import multipublish.core.mp;
			
			import org.osmf.events.MediaPlayerStateChangeEvent;
			import org.osmf.media.MediaPlayerState;
			
			/**
			 * @inheritDoc
			 */
			
			override protected function processPlay():void
			{
				if (video && video.source) video.play();
				/* trace("play judge: " + Boolean(video && video.source) + " isPlaying: " + video.playing);
				if (video.playing)
				{
					trace(this.getBounds(stage));
				} */ 
			}
			
			
			/**
			 * @inheritDoc
			 */
			
			override protected function processStop():void
			{
				if (video && video.playing) video.stop();
			}
			
			
			/**
			 * @private
			 */
			private function handlerMediaStateChange($e:MediaPlayerStateChangeEvent):void
			{
//				if (playing && video.source && 
//					$e.state == MediaPlayerState.PAUSED)
//					video.play();
				
				if ($e.state == MediaPlayerState.PAUSED || 
					$e.state == MediaPlayerState.READY)
				{
					if (playing) video.play();
					dispatchReady();
				}
				else if ($e.state == MediaPlayerState.PLAYBACK_ERROR)
				{
					dispatchReady();
					stop();
				}

			}
			
			
			/**
			 * @private
			 */
//			private function get ready():Boolean
//			{
//				return Boolean(mp::ready);
//			}
			
			/**
			 * @private
			 */
			private function set ready($value:Boolean):void
			{
				mp::ready = $value;
				if (playing) processPlay();
			}
			
			
			/**
			 * @private
			 */
			mp var ready:Boolean;
			
		]]>
	</fx:Script>
</ct:ContentView>
