<?xml version="1.0" encoding="utf-8"?>
<ct:ContentView xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s ="library://ns.adobe.com/flex/spark"
				xmlns:mx="library://ns.adobe.com/flex/mx"
				xmlns:ct="multipublish.views.contents.*">
	<s:VideoDisplay id="video" width="100%" height="100%"
				   autoPlay="false" loop="false"
				   autoDisplayFirstFrame="true"
				   source="{content.content}" scaleMode="letterbox"
				   mediaPlayerStateChange="handlerMediaStateChange(event)"
				   complete="video_completeHandler(event)"/>
	
	<fx:Script>
		<![CDATA[
			import multipublish.core.mp;
			
			import org.osmf.events.MediaPlayerStateChangeEvent;
			import org.osmf.events.TimeEvent;
			import org.osmf.media.MediaPlayerState;
			
			/**
			 * @inheritDoc
			 */
			
			override protected function processPlay():void
			{
				if (video && video.source) video.play();
				/* trace("play judge: " + Boolean(video && video.source) + " isPlaying: " + video.playing);
				if (video.playing)
				{
					trace(this.getBounds(stage));
				} */ 
			}
			
			
			/**
			 * @inheritDoc
			 */
			
			override protected function processStop():void
			{
				if (video && video.playing) video.stop();
			}
			
			override protected function resolveData():void
			{
				super.resolveData();
				
				dispatchReady();
			}
			
			
			/**
			 * @inheritDoc
			 */
			
			override protected function processReset():void
			{
				if (video)
				{
					if (video.playing) video.stop();
					video.source = null;
				}
				
			}
			
			
			/**
			 * @private
			 */
			private function handlerMediaStateChange($e:MediaPlayerStateChangeEvent):void
			{
//				if (playing && video.source && 
//					$e.state == MediaPlayerState.PAUSED)
//					video.play();
				
				if ($e.state == MediaPlayerState.PAUSED || 
					$e.state == MediaPlayerState.READY)
				{
					if (playing && !video.playing) 
					{
						video.play();
						
					}
				}
				else if ($e.state == MediaPlayerState.PLAYBACK_ERROR)
				{
					stop();
				}

			}
			
			
			
			
			private function video_completeHandler(event:TimeEvent):void
			{
				//解决系统内部机制会调用两次改方法的BUG。
				if (event)
				{
					if (f)
					{
						f = !f;
						return;
					}
					f = !f;  
				}
				
				stop();
			}
			
			/**
			 * @private
			 */
			private var f:Boolean;
			
		]]>
	</fx:Script>
</ct:ContentView>
