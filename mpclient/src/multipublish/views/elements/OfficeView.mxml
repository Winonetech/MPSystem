<?xml version="1.0" encoding="utf-8"?>
<el:ElementView xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s ="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:el="multipublish.views.elements.*"
				xmlns:qs="qs.controls.*"
				xmlns:ct="com.winonetech.controls.*"
				xmlns:rs="com.rubenswieringa.book.*"
				initialize="initializeType()">
	
	<s:Rect width="100%" height="100%">
		<s:fill>
			<s:SolidColor alpha=".8" color="0xFFFFFF"/>
		</s:fill>
	</s:Rect>
	
	<rs:Book id="myBook" width="1920" height="1080" horizontalCenter="0" verticalCenter="0"
			 openAt="0" autoFlipDuration="600" easing="0.7" regionSize="600" 
			 sideFlip="false" hardCover="false" hover="false" snap="true" flipOnClick="true"/>
	
	<ct:SwapBtn upSource="assets/images/backUp.png"
				downSource="assets/images/backDown.png"
				width="100" height="100"
				right="10" top="10" 
				click="back()"/>
	
	<fx:Script>
		<![CDATA[
			import com.rubenswieringa.book.Book;
			import com.rubenswieringa.book.Page;
			
			import multipublish.consts.DocumentTypeConsts;
			import multipublish.views.documents.*;
			import multipublish.vo.documents.Document;
			import multipublish.vo.elements.Office;
			
			import mx.events.FlexEvent;
			import mx.graphics.BitmapFillMode;
			import mx.graphics.BitmapScaleMode;
			
			import spark.components.Image;
			
			
			/**
			 * @inheritDoc
			 */
			
			override protected function processReset():void
			{
				if (myBook) 
				{
					myBook.gotoPage(0);
				}
			}
			
			
			/**
			 * @inheritDoc
			 */
			
			override protected function resolveData():void
			{
				super.resolveData();
				
				office = data as Office;
				
				resolveWH();
			}
			
			
			/**
			 * @private
			 */
			private function resolveBook():void
			{
				for each (var item:String in office.documents)
				{
					var image:Image = new Image;
					image.fillMode = BitmapFillMode.SCALE;
					image.scaleMode = BitmapScaleMode.ZOOM;
					image.width = myBook.width * .5;
					image.height = myBook.height;
					image.source = item;
					if (image)
					{
						var page:Page = new Page;
						page.addChild(image);
						myBook.addChild(page);
					}
				}
			}
			
			/**
			 * @private
			 */
			private function resolveWH():void
			{
				if (office && office.documents && office.documents.length)
				{
					var url:String = office.documents[0];
					var loader:Loader = new Loader;
					loader.contentLoaderInfo.addEventListener(Event.COMPLETE, handlerDefault);
					loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, handlerDefault);
					loader.load(new URLRequest(url));
				}
			}
			
			/**
			 * @private
			 */
			private function initializeType():void
			{
				if(!type)
				{
					type = {};
					type[DocumentTypeConsts.IMAGE] = ImageDocumentView;
					type[DocumentTypeConsts.VIDEO] = VideoDocumentView;
					type[DocumentTypeConsts.FLASH] = FlashDocumentView;
				}
			}
			
			
			/**
			 * @private
			 */
			private function handlerDefault($e:Event):void
			{
				var info:LoaderInfo = $e.target as LoaderInfo;
				info.removeEventListener(Event.COMPLETE, handlerDefault);
				info.removeEventListener(IOErrorEvent.IO_ERROR, handlerDefault);
				if ($e.type == Event.COMPLETE)
				{
					var cw:Number = info.content.width * 2;
					var ch:Number = info.content.height;
					var ow:Number = width;
					var oh:Number = height;
					var sc:Number = (ow / oh < cw / ch) ? ow / cw : oh / ch;
					myBook.width = cw * sc;
					myBook.height = ch * sc;
					
					if (myBook)
					{
						resolveBook();
					}
					else
					{
						var handlerCreationComplete:Function = function($e:FlexEvent):void
						{
							removeEventListener(FlexEvent.CREATION_COMPLETE, handlerCreationComplete);
							resolveBook();
						};
						addEventListener(FlexEvent.CREATION_COMPLETE, handlerCreationComplete);
					}
				}
			}
			
			
			/**
			 * @private
			 */
			private var office:Office;
			
			/**
			 * @private
			 */
			private var type:Object;
			
			[Bindable]
			public var itemSize:String = "halfPage";
			
			
			
			
		]]>
	</fx:Script>
</el:ElementView>
