<?xml version="1.0" encoding="utf-8"?>
<el:ElementView xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s ="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:el="multipublish.views.elements.*">
	<s:Image fillMode="scale" scaleMode="zoom"
			 width="100%" height="100%"
			 source ="{arrange.backgroundImage}"
			 visible="{arrange.backgroundMode == ArrangeBackgroundModeConsts.IMAGE}"
			 skinClass="multipublish.skins.ImageBrokenSkin"/>
	<s:Group id="container" width="100%" height="100%"
			 click="handlerContentClick(event)"/>
	<fx:Script>
		<![CDATA[
			
			import multipublish.consts.ArrangeBackgroundModeConsts;
			import multipublish.views.elements.arrange.ArrangeButton;
			import multipublish.vo.elements.Arrange;
			import multipublish.vo.elements.Element;
			import multipublish.vo.elements.ArrangeIcon;
			
			
			/**
			 * @inheritDoc
			 */
			
			override protected function resolveData():void
			{
				super.resolveData();
				arrange = data as Arrange;
				if (arrange)
				{
					drawBackground(width, height);
					for each (var item:ArrangeIcon in arrange.icons)
					{
						var view:ArrangeButton = new ArrangeButton;
						view.data = item;
						container.addElement(view);
					}
				}
			}
			
			
			/**
			 * @inheritDoc
			 */
			
			override protected function drawBackground($w:Number, $h:Number):void
			{
				graphics.clear();
				graphics.beginFill(arrange ? arrange.backgroundColor : 0xFFFFFF);
				graphics.drawRect(0, 0, $w, $h);
				graphics.endFill();
			}
			
			
			/**
			 * @private
			 */
			private function view($data:ArrangeIcon, $rect:Rectangle):void
			{
				typeset && typeset.view($data, $rect);
			}
			
			
			/**
			 * @private
			 */
			private function handlerContentClick($e:MouseEvent):void
			{
				if ($e.target is ArrangeButton)
				{
					var button:ArrangeButton = ArrangeButton($e.target);
					var rect:Rectangle = new Rectangle(button.x, button.y, button.width, button.height);
					view(button.data, rect);
				}
			}
			
			
			/**
			 * 
			 * 背景图片是否可见。
			 * 
			 */
			
			public function get backgroundImageVisible():Boolean
			{
				return arrange ? arrange.backgroundMode == ArrangeBackgroundModeConsts.IMAGE : false;
			}
			
			
			/**
			 * @private
			 */
			[Bindable]
			private var arrange:Arrange;
			
		]]>
	</fx:Script>
</el:ElementView>
