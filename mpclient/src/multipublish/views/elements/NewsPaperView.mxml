<?xml version="1.0" encoding="utf-8"?>
<el:ElementView xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s ="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:el="multipublish.views.elements.*"
				xmlns:np="multipublish.views.elements.newspaper.*">
	
	<s:Rect width="100%" height="100%">
		<s:fill>
			<s:SolidColor color="0x999999"/>
		</s:fill>
	</s:Rect>
	
	<s:Group id="container" clipAndEnableScrolling="false"
			 mouseDown="container_mouseDownHandler(event)"/>
	
	<np:NewspaperZoomer id="zoomer" visible="false"/>
	
	<s:Button skinClass="multipublish.skins.PrevButtonSkin"
			  width="100" height="100"
			  verticalCenter="0" left="10"
			  visible="{navigate}"
			  enabled="{!tweening}" click="tween( width)"/>
	<s:Button skinClass="multipublish.skins.NextButtonSkin"
			  width="100" height="100"
			  verticalCenter="0" right="10"
			  visible="{navigate}"
			  enabled="{!tweening}" click="tween(-width)"/>
	<s:Button skinClass="multipublish.skins.BackButtonSkin"
			  width="100" height="100"
			  right="10" top="10"
			  enabled="{!tweening}" click="back()"/>
	
	<s:ToggleButton label="点击放大" right="10" verticalCenter="-100"
					width="100" height="100" alpha=".5" selected="{roam}"
					change="toggle_changeHandler(event)"/>
	
	<fx:Script>
		<![CDATA[
			import caurina.transitions.Tweener;
			
			import cn.vision.system.VSFile;
			import cn.vision.utils.FileUtil;
			import cn.vision.utils.MathUtil;
			
			import com.rubenswieringa.book.Book;
			import com.winonetech.events.ControlEvent;
			
			import multipublish.consts.DocumentTypeConsts;
			import multipublish.core.mp;
			import multipublish.views.documents.*;
			import multipublish.vo.documents.Document;
			import multipublish.vo.elements.Comman;
			import multipublish.vo.elements.NewsPaper;
			
			import mx.graphics.BitmapFillMode;
			import mx.graphics.BitmapScaleMode;
			
			import spark.components.Image;
			
			
			/**
			 * @inheritDoc
			 */
			
			override protected function processPlay():void
			{
				
			}
			
			
			/**
			 * @inheritDoc
			 */
			
			override protected function processStop():void
			{
				removeZoomer();
			}
			
			
			/**
			 * @inheritDoc
			 */
			
			override protected function processReset():void
			{
				container && container.removeAllElements();
				roam = false;
				resolveData();
			}
			
			
			/**
			 * @inheritDoc
			 */
			
			override protected function resolveData():void
			{
				super.resolveData();
				
				newspaper = data as NewsPaper;
				
				if (newspaper)
				{
					curr = generateImage(index);
					navigate = length > 1;
					if (navigate)
					{
						neigh = index + 1;
						fore = generateImage(neigh);
						neigh = index - 1;
						last = generateImage(neigh);
						fore.x = width;
						last.x =-width;
					}
				}
			}
			
			/**
			 * @private
			 */
			private function generateImage($index:uint):Image
			{
				if (newspaper && newspaper.documents.length && 
					$index < newspaper.documents.length)
				{
					var url:String = newspaper.documents[$index];
					var file:VSFile = new VSFile(FileUtil.resolvePathApplication(url));
					if (file.exists)
					{
						var image:Image = new Image;
						image.source = url;
						image.width  = width;
						image.height = height;
						image.fillMode  = BitmapFillMode .SCALE;
						image.scaleMode = BitmapScaleMode.ZOOM;
						container.addElement(image);
					}
				}
				return image;
			}
			
			/**
			 * @private
			 */
			private function tween($distance:Number):void
			{
				if ($distance)
				{
					side = $distance < 0;
					prev = curr;
					next = side ? fore : last;
					if (prev && next)
					{
						var aim:Number = side ? -width : width;
						tweening = true;
						Tweener.addTween(container, {
							x:side ? -width : width, 
							time:config.slideTweenTime, 
							onComplete:function():void{tweening = false;curr = next;}});
					} else tweening = false;
				} else tweening = false;
			}
			
			/**
			 * @private
			 */
			private function createZoomer():void
			{
				host = stage;
				stage.addEventListener(MouseEvent.MOUSE_MOVE, stage_mouseMoveHandler);
				stage.addEventListener(MouseEvent.MOUSE_UP, stage_mouseUpHandler);
				
				moveZoomer();
				zoomer.visible = true;
			}
			
			/**
			 * @private
			 */
			private function removeZoomer():void
			{
				if (host)
				{
					host.removeEventListener(MouseEvent.MOUSE_MOVE, stage_mouseMoveHandler);
					host.removeEventListener(MouseEvent.MOUSE_UP, stage_mouseUpHandler);
				}
				
				
				zoomer.visible = false;
				host = null;
			}
			
			private function moveZoomer():void
			{
				zoomer.x = MathUtil.clamp(mouseX - 305, 0, width  - 610);
				zoomer.y = MathUtil.clamp(mouseY - 305, 0, height - 610);
				if (curr) zoomer.zoom(curr);
			}
			
			
			
			/**
			 * @private
			 */
			private function toggle_changeHandler(event:Event):void
			{
				roam = event.currentTarget.selected;
			}
			
			/**
			 * @private
			 */
			private function container_mouseDownHandler(event:MouseEvent):void
			{
				if (roam) createZoomer();
			}
			
			/**
			 * @private
			 */
			private function stage_mouseMoveHandler($e:MouseEvent):void
			{
				moveZoomer();
			}
			
			/**
			 * @private
			 */
			private function stage_mouseUpHandler($e:MouseEvent):void
			{
				removeZoomer();
			}
			
			
			/**
			 * @private
			 */
			private function get length():uint
			{
				return newspaper ? newspaper.documents.length : 0;
			}
			
			/**
			 * @private
			 */
			private function get index():int
			{
				return mp::index;
			}
			
			/**
			 * @private
			 */
			private function set index($value:int):void
			{
				var l:int = newspaper && newspaper.documents 
					? newspaper.documents.length : 0;
				if (l)
				{
					if ($value < 0) $value = l - 1;
					if ($value>= l) $value = 0;
					mp::index = $value;
				}
			}
			
			/**
			 * @private
			 */
			private function get neigh():int
			{
				return mp::neigh;
			}
			
			/**
			 * @private
			 */
			private function set neigh($value:int):void
			{
				var l:int = newspaper && newspaper.documents 
					? newspaper.documents.length : 0;
				if (l)
				{
					if ($value>= l) $value = 0;
					if ($value < 0) $value = l - 1;
					mp::neigh = $value;
				}
			}
			
			
			/**
			 * @private
			 */
			private var side:Boolean;
			
			/**
			 * @private
			 */
			private var curr:Image;
			
			/**
			 * @private
			 */
			private var next:Image;
			
			/**
			 * @private
			 */
			private var prev:Image;
			
			/**
			 * @private
			 */
			private var last:Image;
			
			/**
			 * @private
			 */
			private var fore:Image;
			
			/**
			 * @private
			 */
			private var newspaper:NewsPaper;
			
			/**
			 * @private
			 */
			private var host:Stage;
			
			/**
			 * @private
			 */
			[Bindable]
			private var navigate:Boolean;
			
			/**
			 * @private
			 */
			[Bindable]
			private var roam:Boolean;
			
			
			/**
			 * @private
			 */
			mp var index:int;
			
			/**
			 * @private
			 */
			mp var neigh:int;
			
		]]>
	</fx:Script>
	
</el:ElementView>
