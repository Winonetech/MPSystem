<?xml version="1.0" encoding="utf-8"?>
<elements:ElementView xmlns:fx="http://ns.adobe.com/mxml/2009" 
					  xmlns:s="library://ns.adobe.com/flex/spark" 
					  xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:elements="multipublish.views.elements.*"
					  width="{config.width}" height="{config.height}">
	
	<fx:Script>
		<![CDATA[
			import multipublish.consts.ServiceConsts;
			import multipublish.skins.MapBackButtonSkin;
			
			import mx.controls.Image;
			import mx.events.FlexEvent;
			
			import spark.components.Image;
			
			/**
			 * 
			 * 结果展示。
			 * 
			 */
			
			[Bindable]
			private var showStr:String;
			
			
			
			/**
			 * 
			 * 打点计数器。
			 * 
			 */
			
			private var i:uint;
			
			
			
			/**
			 * 
			 * 结果展示计时器。
			 * 
			 */
			
			private var timer_return:Timer;
			
			
			
			/**
			 * 
			 * 等待超时计时器。
			 * 
			 */
			
			private var timerOut:Timer;
			
			
			
			/**
			 * 
			 * 打点计时器。
			 * 
			 */
			
			private var timerPoint:Timer;
			
			
			
			/**
			 * 
			 * 结果展示时长。
			 * 
			 */
			
			private const WAIT_TIME:uint = 3;
			
			
			
			/**
			 * 
			 * 等待超时时长。
			 * 
			 */
			
			private const OUT_TIME :uint = 30;

			
			
			override protected function processPlay():void
			{
				config.service.registHandler(ServiceConsts.CALL_MASTER, changeLabel);
			}
			
			
			override protected function processStop():void
			{
				config.service.removeHandler(ServiceConsts.CALL_MASTER);
			}
			
			
			protected function sendCommand(event:MouseEvent):void
			{
				config.service.callMaster();
				
				currentState = "show";

				timerReturnDeal();
				timerOutDeal();
				timerPointDeal();
				
				showStr = "呼叫中";
				
				timerPoint.reset();
				timerPoint.start();
				
				timerOut.reset();
				timerOut.start();
				
			}
			
			
			
			/**
			 * 
			 * 返回计时器的创建与销毁。
			 * 
			 */
			
			private function timerReturnDeal():void
			{
				if (!timer_return)
				{
					timer_return = new Timer(1000 * WAIT_TIME, 1);
					timer_return.addEventListener(TimerEvent.TIMER_COMPLETE, timerReturnHandler);
				}
				else
				{
					timer_return.removeEventListener(TimerEvent.TIMER_COMPLETE, timerReturnHandler);
					timer_return = null;
				}
			}
			
			
			
			/**
			 * 
			 * 打点计时器的创建与销毁。
			 * 
			 */
			
			private function timerPointDeal():void
			{
				if (!timerPoint)
				{
					timerPoint = new Timer(300);
					timerPoint.addEventListener(TimerEvent.TIMER, timerPointHandler);
				}
				else
				{
					timerPoint.removeEventListener(TimerEvent.TIMER, timerPointHandler);
					timerPoint = null;
				}
			}

			
			
			/**
			 * 
			 * 超时计时器的创建与销毁。
			 * 
			 */
			
			private function timerOutDeal():void
			{
				if (!timerOut)
				{
					timerOut = new Timer(1000 * OUT_TIME);
					timerOut.addEventListener(TimerEvent.TIMER, timerOutHandler);
				}
				else
				{
					timerOut.removeEventListener(TimerEvent.TIMER, timerOutHandler);
					timerOut = null;
				}
			}
			
			
			
			/**
			 * 
			 * 超时处理。
			 * 
			 */
			
			private function timerOutHandler(e:TimerEvent):void
			{
				changeLabel("busy");
			}
			
			
			
			/**
			 * 
			 * 打点处理。
			 * 
			 */
			
			private function timerPointHandler(e:TimerEvent):void
			{
				if (currentState == "btn") return;
				
				if (i++ < 3) showStr += ".";
				else
				{
					i = 0;
					showStr = "呼叫中";
				}
			}


			
			/**
			 * 
			 * 返回处理。
			 * 
			 */
			
			private function timerReturnHandler(e:TimerEvent):void
			{
				timerReturnDeal();   //timerReturn结束。
				timerOutDeal();		//timerOut结束。
				
				currentState = "btn";
			}
			
			
			
			/**
			 * 
			 * 解析参数。
			 * @param $cmd:String "200"表示正常，否则表示繁忙。
			 * 
			 */
			
			private function changeLabel($cmd:String = null):void
			{
				if ($cmd && currentState == "show")
				{
					showStr = $cmd == "200" ? "马上为您服务" : "繁忙，请稍后再试";
					
					timerPointDeal();  //timerPoint结束。
					
					timer_return && timer_return.start();
				}
			}
			
		]]>
	</fx:Script>
	
	<elements:states>
		<s:State name="btn"/>
		<s:State name="show"/>
	</elements:states>
	
	<s:Image x="0" y="0" width="100%" height="100%" source="assets/images/cbtn_H.png"/>
	
	<s:Button horizontalCenter="0" verticalCenter="0" 
			  buttonMode="true" useHandCursor="true" mouseChildren="false" 
			  includeIn="btn" label="呼叫大堂经理" cornerRadius="20"
			  fontFamily="微软雅黑" fontSize="60" height="120" width="500"
			  fontWeight="bold" click="sendCommand(event)"/>
	
	<s:Label  horizontalCenter="0" verticalCenter="0" verticalAlign="middle"
			  height="100" width="50%" backgroundColor="0xffffff" 
			  backgroundAlpha=".3" paddingTop="5"  fontSize="60"
			  fontFamily="微软雅黑" fontWeight="bold" text="{showStr}" 
			  textAlign="center" includeIn="show"/>
	
	<s:Button right="10" top="10" includeIn="btn" label="返回" click="back()"
			  skinClass="multipublish.skins.MapBackButtonSkin" />
	
</elements:ElementView>
