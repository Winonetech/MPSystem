<?xml version="1.0" encoding="utf-8"?>
<dc:DocumentView xmlns:fx="http://ns.adobe.com/mxml/2009" 
				 xmlns:s ="library://ns.adobe.com/flex/spark" 
				 xmlns:mx="library://ns.adobe.com/flex/mx" 
				 xmlns:dc="multipublish.views.documents.*">
	<!--<s:VideoDisplay id="video" loop="{loop}"
					scaleMode="zoom" autoPlay="false" autoRewind="true"
					mediaPlayerStateChange="video_mediaPlayerStateChangeHandler(event)"
					width="100%" height="100%"
					source="{media.path}"
					complete="video_completeHandler(event)"/>-->
	
	<s:VideoPlayer source="{media.path}" id="video"
				   width="100%" height="100%"
				   autoDisplayFirstFrame="true" scaleMode="letterbox"
				   autoPlay="false" autoRewind="true" loop="false"
				   skinClass="multipublish.skins.UnnavigationVideoPlayerSkin"
				   mediaPlayerStateChange="media_stateChangeHandler(event)"
				   complete="video_completeHandler(event)"/>
	
	<fx:Script>
		<![CDATA[
			import multipublish.vo.documents.Document;
			
			import org.osmf.events.MediaPlayerStateChangeEvent;
			import org.osmf.events.TimeEvent;
			import org.osmf.media.MediaPlayerState;
			
			
			/**
			 * @inheritDoc
			 */
			
			override protected function processPlay():void
			{
				video && video.source && video.play();
			}
			
			
			/**
			 * @inheritDoc
			 */
			
			override protected function processReset():void
			{
				if (video)
				{
					video.source = null;
					//System.gc();
				}
			}
			
			
			/**
			 * @inheritDoc
			 */
			
			override protected function processStop():void
			{
				if (video && video.playing) video.stop();
			}
			
			
			/**
			 * @private
			 */
			protected function media_stateChangeHandler($e:MediaPlayerStateChangeEvent):void
			{
				if ($e.state == MediaPlayerState.PAUSED || 
					$e.state == MediaPlayerState.READY)
				{
					if (playing) video.play();
					dispatchReady();
				}
				else if ($e.state == MediaPlayerState.PLAYBACK_ERROR)
				{
					dispatchReady();
					stop();
				}
			}
			
			
			/**
			 * @private
			 */
			private function video_completeHandler(event:TimeEvent):void
			{
				/* if(!completed)
				{
					completed = true;
					stop();
				} */
				//解决系统内部机制会调用两次改方法的BUG。
				if (event)
				{
					if (f)
					{
						f = !f;
						return;
					}
					f = !f;  
				}
				
				stop();
				
			}
			
			/**
			 * @private
			 */
			private var f:Boolean;
			
		]]>
	</fx:Script>
</dc:DocumentView>
